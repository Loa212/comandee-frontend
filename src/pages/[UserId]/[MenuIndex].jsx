import Head from "next/head";
import React, { useContext, useEffect } from "react";
import { API_URL } from "../../../utils/urls";
import AllProducts from "../../components/AllProducts";
import { useRouter } from "next/router";
import MenusLayout from "../../shared/MenusLayout";
import MenuContext from "../../state/MenuContext";

const Menu = ({ Menus, MenuIndex }) => {
  const router = useRouter();
  console.log(Menus);
  const menus = Menus.data[0].attributes.menus.data;
  const menuCategories = menus[MenuIndex].attributes.categories.data;
  const { MenuState, setMenuState } = useContext(MenuContext);

  useEffect(() => {
    if (MenuState.Loaded) {
      return;
    } else {
      const drawerData = [];
      menuCategories.forEach((e) =>
        drawerData.push({
          title: e.attributes.name,
          to: e.attributes.slug,
        })
      );
      setMenuState({
        Loaded: true,
        data: drawerData,
      });
    }
  }, [MenuState.Loaded, menuCategories, setMenuState]);

  return (
    <>
      <Head>
        <title>Comandee</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <MenusLayout>
        <div className="space-y-4 text-center">
          <h1 className="pt-4 text-4xl font-bold text-gray-700 opacity-80">
            Menu:
          </h1>

          <p className="text-xl font-medium">
            {menus[MenuIndex].attributes?.menuDescription?.split("_")[0]}
          </p>

          <div className="space-y-1">
            <p className="text-sm">
              {menus[MenuIndex].attributes?.menuDescription?.split("_")[1]}
            </p>
            <p className="text-sm">
              {menus[MenuIndex].attributes?.menuDescription?.split("_")[2]}
            </p>
          </div>
        </div>

        <div className="mx-auto max-w-xs space-y-6 pt-4 pb-9 text-lg">
          {menuCategories.map((category) => (
            <div key={category.attributes.slug}>
              <h3
                className="fixAnchor pb-2 text-center text-xl font-medium text-rose-700"
                id={category.attributes.slug}
              >
                {category.attributes.name}
              </h3>
              <AllProducts
                UserId={router.query.UserId}
                products={category.attributes.products.data}
              />
            </div>
          ))}
        </div>
      </MenusLayout>
    </>
  );
};

export default Menu;

export async function getStaticPaths() {
  try {
    //retrieve all the possible paths
    const users_res = await fetch(`${API_URL}/api/user-ids?populate=menus`);
    const users = await users_res.json();
    //return them to NextJs app

    const paths = users.data
      .map((user) =>
        user.attributes.menus.data.map((menu, index) => ({
          params: {
            UserId: String(user.attributes.uid),
            MenuIndex: String(index),
          },
        }))
      )
      .flat();

    return {
      paths,
      fallback: false,
    };
  } catch (error) {
    console.log(error);
    return null;
  }
}

export async function getStaticProps({ params: { UserId, MenuIndex } }) {
  //fetch products
  // const products_res = await fetch(`${API_URL}/api/products?populate=image`)
  //const products = await products_res.json()
  const Menus_res = await fetch(
    `${API_URL}/api/user-ids?populate[menus][populate][categories][populate][products][populate]=image&filters[uid][$eq]=${UserId}`
    //&filters[menus][id][$eq]=${MenuIndex}`
  );
  const Menus = await Menus_res.json();

  return {
    props: {
      Menus,
      MenuIndex,
    },
    revalidate: 60,
  };
}
